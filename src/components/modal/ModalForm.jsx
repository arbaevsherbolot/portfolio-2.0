import React, { useState, useEffect } from "react";
import styles from "./ModalForm.module.scss";

const ModalForm = ({ open }) => {
  const [isClose, setIsClose] = useState(true);
  const [success, setSuccess] = useState(false);
  const [data, setData] = useState({
    fullName: "",
    phoneNumber: "",
    email: "",
  });
  const close = isClose ? open : !open;

  const sendDataForm = async (e) => {
    e.preventDefault();

    try {
      console.log(data);
      setSuccess(!success);
    } catch (e) {
      throw new Error(e.message);
    }
  };

  const handleChangeFullName = (e) => {
    setData((prev) => ({
      ...prev,
      fullName: e.target.value,
    }));
  };

  const handleChangePhoneNumber = (e) => {
    setData((prev) => ({
      ...prev,
      phoneNumber: e.target.value,
    }));
  };

  const handleChangeEmail = (e) => {
    setData((prev) => ({
      ...prev,
      email: e.target.value,
    }));
  };

  return (
    <>
      {success ? (
        <div
          className={
            close
              ? `${styles.modal_wrappper_success} ${styles.active}`
              : styles.modal_wrappper_success
          }
          onClick={() => setIsClose(!isClose)}>
          <div className={styles.box} onClick={(e) => e.stopPropagation()}>
            <img
              className={styles.img}
              src="https://i.pinimg.com/originals/e8/06/52/e80652af2c77e3a73858e16b2ffe5f9a.gif"
              alt="Success GIF"
            />

            <div className={styles.text}>
              <h2 className={styles.title}>–§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!</h2>
              <p className={styles.desc}>
                –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ {data.fullName}! <br /> –æ—Ç–≤–µ—Ç –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –≤
                —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è.
              </p>
            </div>
          </div>
        </div>
      ) : (
        <div
          className={
            close
              ? `${styles.modal_wrappper} ${styles.active}`
              : styles.modal_wrappper
          }
          onClick={() => setIsClose(!isClose)}>
          <div className={styles.box} onClick={(e) => e.stopPropagation()}>
            <div className={styles.text}>
              <h2 className={styles.title}>–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏</h2>
              <p className={styles.desc}>
                –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å –≤–∞–º. <br /> –ü–æ–∂–∞–ª—É–π—Å—Ç–∞,
                —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏
              </p>
            </div>

            <form className={styles.form} onSubmit={sendDataForm}>
              <input
                type="text"
                onChange={handleChangeFullName}
                placeholder="–ò–º—è –∏ –§–∞–º–∏–ª–∏—è"
                className={styles.input}
              />

              <div className={styles.phone_input_wrapper}>
                <div className={styles.div}>üá∞üá¨</div>

                <input
                  type="text"
                  onChange={handleChangePhoneNumber}
                  placeholder="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
                  className={styles.input}
                />
              </div>

              <input
                type="text"
                onChange={handleChangeEmail}
                placeholder="–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞"
                className={styles.input}
              />

              <button type="submit" className={styles.button}>
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å
              </button>
            </form>
          </div>
        </div>
      )}
    </>
  );
};

export default ModalForm;
